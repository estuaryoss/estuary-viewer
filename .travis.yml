language: node_js
node_js:
  - 14

services:
  - docker

env:

before_install:
install:

deploy:
  - provider: script
    script: bash docker_push_tag.sh
    skip_cleanup: true
    on:
      tags: true

  - provider: script
    script: bash docker_push_master.sh
    skip_cleanup: true
    on:
      branch: master

before_script:
  - npm install
  - npm run build
  - docker pull alpine:3.9.4
  - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_TOKEN"

script:
  - docker-compose -f docker-compose-entire_stack.yml pull
  - docker build . -t estuaryoss/viewer:latest
  - docker-compose -f docker-compose-entire_stack.yml up -d
  - sleep 90
  - docker ps
  #  - generate 2 deployments and 1 test run
  - docker exec -ti estuary-viewer bash -c "curl -i --request POST http://estuary-deployer:8080/docker/deployments/alpine.yml/variables.yml"
  - docker exec -ti estuary-viewer bash -c "curl -i --request POST http://estuary-deployer:8080/docker/deployments/alpine.yml/variables.yml"
  - docker exec -ti estuary-viewer bash -c "
    curl -i
    --request POST 'http://estuary-agent:8080/commanddetached/100'
    --header 'Accept:application/json'
    --header 'Content-Type:text/plain'
    --header 'Token:None'
    --data 'sleep 1\nsleep 2\nsleep 3600'"
  - sleep 20
  - docker exec estuary-viewer sh -c "cd /home/node/app/; npm test"
  - docker ps


